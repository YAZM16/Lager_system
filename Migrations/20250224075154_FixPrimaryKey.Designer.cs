// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using My_Project_03.Models;

#nullable disable

namespace My_Project_03.Migrations
{
    [DbContext(typeof(VehiclePartsManagementContext))]
    [Migration("20250224075154_FixPrimaryKey")]
    partial class FixPrimaryKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("My_Project_03.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("PartId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("My_Project_03.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A0BC78AE0D5");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("My_Project_03.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("PartId")
                        .HasColumnType("int")
                        .HasColumnName("part_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__inventor__3213E83FDAC03CD5");

                    b.HasIndex("PartId");

                    b.ToTable("inventory", (string)null);
                });

            modelBuilder.Entity("My_Project_03.Models.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManufacturerId"));

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ManufacturerId")
                        .HasName("PK__Manufact__357E5CC159511DC7");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("My_Project_03.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BCFD7C81FFF");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("My_Project_03.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InventoryId")
                        .HasColumnType("int")
                        .HasColumnName("inventory_id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("PK__order_it__3213E83F2E31D8EC");

                    b.HasIndex("InventoryId");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("My_Project_03.Models.Parts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("CompatibilityNotes")
                        .HasColumnType("text")
                        .HasColumnName("compatibility_notes");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("PartNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("part_number");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<string>("VehicleType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("vehicle_type");

                    b.HasKey("Id")
                        .HasName("PK__parts__3213E83F279A2BFE");

                    b.ToTable("Parts", (string)null);
                });

            modelBuilder.Entity("My_Project_03.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("My_Project_03.Models.VehicleModel", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("YearRange")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ModelId")
                        .HasName("PK__VehicleM__E8D7A12C5B3DE157");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("VehicleModels");
                });

            modelBuilder.Entity("My_Project_03.Models.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type_name");

                    b.HasKey("Id")
                        .HasName("PK__vehicle___3213E83FFE13BE29");

                    b.ToTable("vehicle_types", (string)null);
                });

            modelBuilder.Entity("My_Project_03.Models.Cart", b =>
                {
                    b.HasOne("My_Project_03.Models.Parts", "Parts")
                        .WithMany("Carts")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parts");
                });

            modelBuilder.Entity("My_Project_03.Models.Category", b =>
                {
                    b.HasOne("My_Project_03.Models.Category", "ParentCategory")
                        .WithMany("InverseParentCategory")
                        .HasForeignKey("ParentCategoryId")
                        .HasConstraintName("FK_Category_ParentCategory");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("My_Project_03.Models.Inventory", b =>
                {
                    b.HasOne("My_Project_03.Models.Parts", "Parts")
                        .WithMany("Inventories")
                        .HasForeignKey("PartId")
                        .HasConstraintName("FK__inventory__parts___5CD6CB2B");

                    b.Navigation("Parts");
                });

            modelBuilder.Entity("My_Project_03.Models.OrderItem", b =>
                {
                    b.HasOne("My_Project_03.Models.Inventory", "Inventory")
                        .WithMany("OrderItems")
                        .HasForeignKey("InventoryId")
                        .HasConstraintName("FK__order_ite__inven__628FA481");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("My_Project_03.Models.VehicleModel", b =>
                {
                    b.HasOne("My_Project_03.Models.Manufacturer", "Manufacturer")
                        .WithMany("VehicleModels")
                        .HasForeignKey("ManufacturerId")
                        .HasConstraintName("FK_VehicleModels_Manufacturers");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("My_Project_03.Models.Category", b =>
                {
                    b.Navigation("InverseParentCategory");
                });

            modelBuilder.Entity("My_Project_03.Models.Inventory", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("My_Project_03.Models.Manufacturer", b =>
                {
                    b.Navigation("VehicleModels");
                });

            modelBuilder.Entity("My_Project_03.Models.Parts", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
